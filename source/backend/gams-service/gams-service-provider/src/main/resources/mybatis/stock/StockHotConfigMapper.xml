<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fintech.gams.stock.mapper.StockHotConfigMapper">
    <!-- 基础列 -->
    <sql id="stockHotConfigColumns">
        a.ID as id,
        a.STOCKINFO_ID as stockinfoId,
        a.REMARK as remark,
        a.CREATE_BY as createBy,
        a.CREATE_DATE as createDate,
        a.UPDATE_BY as updateBy,
        a.UPDATE_DATE as updateDate
    </sql>

     <sql id="stockHotConfigJoinColumns">
        a.ID ,
        a.STOCKINFO_ID ,
        a.REMARK ,
        a.CREATE_BY ,
        a.CREATE_DATE ,
        a.UPDATE_BY ,
        a.UPDATE_DATE ,
        b.ID as S_ID,
        b.STOCK_CODE,
        b.STOCK_SYMBOL,
        b.STOCK_ISIN,
        b.STOCK_SPELL_ABBR,
        b.STOCK_NAME_EN,
        b.STOCK_NAME_CN,
        b.STOCK_TYPE
    </sql>

    <resultMap id="stockHotConfigResultMap" type="com.fintech.gams.stock.entity.StockHotConfig">
        <id column="ID" property="id" />
        <result column="STOCKINFO_ID" property="stockinfoId"/>
        <result column="REMARK" property="remark"/>
        <result column="CREATE_BY" property="createBy"/>
        <result column="CREATE_DATE" property="createDate"/>
        <result column="UPDATE_BY" property="updateBy"/>
        <result column="UPDATE_DATE" property="updateDate"/>
        <association property="stockInfo" javaType="com.fintech.gams.stock.entity.StockInfo">
            <id column="S_ID" property="id" />
            <result column="STOCK_CODE" property="stockCode"/>
            <result column="STOCK_SYMBOL" property="stockSymbol"/>
            <result column="STOCK_ISIN" property="stockIsin"/>
            <result column="STOCK_SPELL_ABBR" property="stockSpellAbbr"/>
            <result column="STOCK_NAME_EN" property="stockNameEn"/>
            <result column="STOCK_NAME_CN" property="stockNameCn"/>
            <result column="STOCK_TYPE" property="stockType"/>
        </association>
    </resultMap>

    <!-- 普通插入 -->
    <insert id="insert" parameterType="com.fintech.gams.stock.entity.StockHotConfig">
        INSERT INTO STOCK_HOT_CONFIG(
            ID ,
            STOCKINFO_ID ,
            REMARK ,
            CREATE_BY ,
            CREATE_DATE ,
            UPDATE_BY ,
            UPDATE_DATE 
        ) VALUES (
            #{id} ,
            #{stockinfoId} ,
            #{remark} ,
            #{createBy} ,
            #{createDate} ,
            #{updateBy} ,
            #{updateDate} 
        )
    </insert>
    <!-- 根据主键物理删除 -->
    <delete id="remove" parameterType="java.lang.Long">
        DELETE FROM STOCK_HOT_CONFIG WHERE ID = #{id}
    </delete>

    <!-- 根据主键逻辑删除
    <update id="delete" parameterType="java.lang.Long">
        UPDATE STOCK_HOT_CONFIG SET DEL_FLAG = 1 WHERE ID = #{id}
    </update>
    -->

    <!--根据条件是否插入数据 -->
    <insert id="insertSelective" parameterType="com.fintech.gams.stock.entity.StockHotConfig">
        INSERT INTO STOCK_HOT_CONFIG
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
                ID ,
        </if>
        <if test="stockinfoId != null">
                STOCKINFO_ID ,
        </if>
        <if test="remark != null">
                REMARK ,
        </if>
        <if test="createBy != null">
                CREATE_BY ,
        </if>
        <if test="createDate != null">
                CREATE_DATE ,
        </if>
        <if test="updateBy != null">
                UPDATE_BY ,
        </if>
        <if test="updateDate != null">
                UPDATE_DATE 
        </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
                #{id} ,
        </if>
        <if test="stockinfoId != null">
                #{stockinfoId} ,
        </if>
        <if test="remark != null">
                #{remark} ,
        </if>
        <if test="createBy != null">
                #{createBy} ,
        </if>
        <if test="createDate != null">
                #{createDate} ,
        </if>
        <if test="updateBy != null">
                #{updateBy} ,
        </if>
        <if test="updateDate != null">
                #{updateDate} 
        </if>
        </trim>
    </insert>

    <!-- 选择性更新数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.fintech.gams.stock.entity.StockHotConfig">
        UPDATE STOCK_HOT_CONFIG
           <set>
            <if test="stockinfoId != null">
                STOCKINFO_ID = #{stockinfoId} ,
            </if>
            <if test="remark != null">
                REMARK = #{remark} ,
            </if>
            <if test="createBy != null">
                CREATE_BY = #{createBy} ,
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate} ,
            </if>
            <if test="updateBy != null">
                UPDATE_BY = #{updateBy} ,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate} 
            </if>
           </set>
        WHERE ID = #{id}
    </update>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="list">
        INSERT INTO STOCK_HOT_CONFIG(
            ID ,
            STOCKINFO_ID ,
            REMARK ,
            CREATE_BY ,
            CREATE_DATE ,
            UPDATE_BY ,
            UPDATE_DATE 
        )
        <foreach close=")" collection="list" item="item" index="index" open="(" separator="union">
            SELECT
            #{item.id} ,
            #{item.stockinfoId} ,
            #{item.remark} ,
            #{item.createBy} ,
            #{item.createDate} ,
            #{item.updateBy} ,
            #{item.updateDate} 
            FROM DUAL
        </foreach>
    </insert>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            UPDATE STOCK_HOT_CONFIG SET
            STOCKINFO_ID = #{item.stockinfoId} ,
            REMARK = #{item.remark} ,
            CREATE_BY = #{item.createBy} ,
            CREATE_DATE = #{item.createDate} ,
            UPDATE_BY = #{item.updateBy} ,
            UPDATE_DATE = #{item.updateDate} 
            WHERE ID = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键更新一条信息所有数据 -->
    <update id="updateByPrimaryKey" parameterType="com.fintech.gams.stock.entity.StockHotConfig">
        UPDATE STOCK_HOT_CONFIG SET
            STOCKINFO_ID = #{stockinfoId} ,
            REMARK = #{remark} ,
            CREATE_BY = #{createBy} ,
            CREATE_DATE = #{createDate} ,
            UPDATE_BY = #{updateBy} ,
            UPDATE_DATE = #{updateDate} 
        WHERE ID = #{id}
    </update>

    <!-- 根据主键取数据 -->
    <select id="selectByPrimaryKey"  parameterType="java.lang.Long" resultType="com.fintech.gams.stock.entity.StockHotConfig">
        SELECT <include refid="stockHotConfigColumns"/> FROM STOCK_HOT_CONFIG a WHERE a.ID = #{id}
    </select>

    <!-- 可分页的对象查询 -->
    <select id="findList" resultMap="stockHotConfigResultMap">
        SELECT
        <include refid="stockHotConfigJoinColumns"/>
        FROM STOCK_HOT_CONFIG a LEFT JOIN STOCK_INFO b
          ON b.ID = a.STOCKINFO_ID WHERE 1 = 1 <!-- and a.DEL_FLAG = 0-->
        <if test="stockinfoId != null">
            AND a.STOCKINFO_ID = #{stockinfoId}
        </if>
        <if test="createBy != null">
            AND a.CREATE_BY = #{createBy}
        </if>
        ORDER BY a.UPDATE_DATE DESC
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.fintech.gams.stock.entity.StockHotConfig">
        SELECT
        <include refid="stockHotConfigColumns"/>
        FROM STOCK_HOT_CONFIG a <!--WHERE a.DEL_FLAG = 0-->
    </select>


</mapper>

